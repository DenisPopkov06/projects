{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n    removeItems(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    },\n    itemPlus(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      if (findItem) {\n        findItem.count += 1;\n        const totalCount = items.reduce((sum, item) => item.price * item.count + sum, 0);\n      }\n    },\n    itemMinus(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      if (findItem) {\n        findItem.count -= 1;\n        state.totalPrice = findItem.price * findItem.count;\n      }\n    },\n    itemClear(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    }\n  }\n});\nexport const {\n  addItems,\n  removeItems,\n  clearItems,\n  itemPlus,\n  itemMinus,\n  itemClear\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItems","state","action","findItem","find","obj","id","payload","count","push","reduce","sum","price","removeItems","filter","clearItems","itemPlus","totalCount","item","itemMinus","itemClear","actions","reducer"],"sources":["C:/Users/pansa/OneDrive/Desktop/проекты/react-pizza/src/redux/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  totalPrice: 0,\r\n  items: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItems(state, action) {\r\n      const findItem = state.items.find((obj)=>obj.id===action.payload.id)\r\n\r\n      if(findItem){\r\n        findItem.count++\r\n      } else{\r\n        state.items.push({\r\n          ...action.payload,\r\n          count: 1\r\n        })\r\n      }\r\n\r\n      state.totalPrice = state.items.reduce((sum, obj) => {return (obj.price*obj.count)+sum}, 0)\r\n    },\r\n    removeItems(state, action) {\r\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\r\n    },\r\n    clearItems(state) {\r\n      state.items = [];\r\n      state.totalPrice = 0;\r\n    },\r\n    itemPlus(state, action){\r\n      const findItem = state.items.find((obj)=>obj.id===action.payload)\r\n      if(findItem){\r\n        findItem.count += 1;\r\n       const totalCount = items.reduce((sum, item) => item.price*item.count+sum, 0)\r\n      }\r\n    },\r\n    itemMinus(state, action){\r\n      const findItem = state.items.find((obj)=>obj.id===action.payload)\r\n      if(findItem){\r\n        findItem.count -= 1;\r\n        state.totalPrice = findItem.price * findItem.count\r\n      }\r\n    },\r\n    itemClear(state, action){\r\n      state.items = state.items.filter((obj) =>  obj.id !== action.payload)\r\n      state.totalPrice = state.items.reduce((sum, obj) => {return (obj.price*obj.count)+sum}, 0)\r\n    }\r\n  },\r\n});\r\n\r\nexport const { addItems, removeItems, clearItems, itemPlus, itemMinus, itemClear } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,EAAE,KAAGJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAEpE,IAAGH,QAAQ,EAAC;QACVA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAK;QACJP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACf,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MAEAP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAK;QAAC,OAAQA,GAAG,CAACO,KAAK,GAACP,GAAG,CAACG,KAAK,GAAEG,GAAG;MAAA,CAAC,EAAE,CAAC,CAAC;IAC5F,CAAC;IACDE,WAAWA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAET,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACtE,CAAC;IACDQ,UAAUA,CAACd,KAAK,EAAE;MAChBA,KAAK,CAACL,KAAK,GAAG,EAAE;MAChBK,KAAK,CAACN,UAAU,GAAG,CAAC;IACtB,CAAC;IACDqB,QAAQA,CAACf,KAAK,EAAEC,MAAM,EAAC;MACrB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,EAAE,KAAGJ,MAAM,CAACK,OAAO,CAAC;MACjE,IAAGJ,QAAQ,EAAC;QACVA,QAAQ,CAACK,KAAK,IAAI,CAAC;QACpB,MAAMS,UAAU,GAAGrB,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEO,IAAI,KAAKA,IAAI,CAACN,KAAK,GAACM,IAAI,CAACV,KAAK,GAACG,GAAG,EAAE,CAAC,CAAC;MAC7E;IACF,CAAC;IACDQ,SAASA,CAAClB,KAAK,EAAEC,MAAM,EAAC;MACtB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,EAAE,KAAGJ,MAAM,CAACK,OAAO,CAAC;MACjE,IAAGJ,QAAQ,EAAC;QACVA,QAAQ,CAACK,KAAK,IAAI,CAAC;QACnBP,KAAK,CAACN,UAAU,GAAGQ,QAAQ,CAACS,KAAK,GAAGT,QAAQ,CAACK,KAAK;MACpD;IACF,CAAC;IACDY,SAASA,CAACnB,KAAK,EAAEC,MAAM,EAAC;MACtBD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAET,GAAG,IAAMA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACrEN,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAK;QAAC,OAAQA,GAAG,CAACO,KAAK,GAACP,GAAG,CAACG,KAAK,GAAEG,GAAG;MAAA,CAAC,EAAE,CAAC,CAAC;IAC5F;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,QAAQ;EAAEa,WAAW;EAAEE,UAAU;EAAEC,QAAQ;EAAEG,SAAS;EAAEC;AAAU,CAAC,GAAGvB,SAAS,CAACwB,OAAO;AACtG,eAAexB,SAAS,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}